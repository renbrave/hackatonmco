# // Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# // SPDX-License-Identifier: Apache-2.0
# Based on https://github.com/awslabs/aws-deployment-framework/blob/master/samples/sample-fargate-node-app/template.yml


AWSTemplateFormatVersion: '2010-09-09'
Description: pgAdmin4 docker deployment via Fargate and ECS
Parameters:
  PGEmail:
    Description: The initial username for pgAdmin4
    Default: "demo@demo.com"
    Type: String
  PGPassword:
    Description: The initial password for pgAdmin4
    Default: "pgadmin4!"
    Type: String
  TemplateName:
    Type: String
    Default: "pgAdmin4"
    Description: A name for the service
  Image:
    Type: String
    Default: "dpage/pgadmin4"
    Description: docker hub image name. Should not need to change.
#  ContainerPort:
#    Type: Number
#    Description: What port number the application inside the docker container is binding to
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  MainVPC:
    Type: AWS::EC2::VPC
    Description: Main VPC id
  PubSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: ID of a Public Subnet for pgAdmin.
  #BastionSecurityGroupId:
  #  Type: AWS::EC2::SecurityGroup::Id
  #  Description: Security group accessible from web browser.  Also should be allowed outbound to database.

#  Path:
#    Type: String
#    Default: "*"
#    Description: A path on the public load balancer that this service
#                 should be connected to. Use * to send all load balancer
#                 traffic to this service.
#  Priority:
#    Type: Number
#    Default: 1
#    Description: The priority for the routing rule added to the load balancer.
#                 This only applies if your have multiple services which have been
#                 assigned to different paths on the load balancer.

Resources:
  FargateCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Ref 'TemplateName'
  pgAdminSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MainVPC
      GroupName: !Sub ${TemplateName}-pgadmin
      GroupDescription: PGAdmin Security Group
      Tags:
        - Key: Name
          Value: pgadmin-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          #SourceSecurityGroupId: !Ref bastionSecGroup # @Todo Ref to C9 SecGrp
          CidrIp: 0.0.0.0/0
          Description: Allows HTTP access from customer workstation.
  pgadminTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'TemplateName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      # ExecutionRoleArn:
        # Fn::ImportValue: 'ECSTaskExecutionRole'
      TaskRoleArn: !Ref "AWS::NoValue"
      ContainerDefinitions:
        - Name: !Ref 'TemplateName'
          Image: !Ref 'Image'
          # PortMappings:
            # - ContainerPort: !Ref 'ContainerPort'
          Environment:
            - Name: "PGADMIN_DEFAULT_EMAIL"
              Value: !Ref 'PGEmail'
            - Name: "PGADMIN_DEFAULT_PASSWORD"
              Value: !Ref 'PGPassword'
  pgadminService:
    Type: AWS::ECS::Service
#    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: !Ref 'TemplateName'
      Cluster:
        !Ref 'FargateCluster'
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref pgAdminSecGroup
          Subnets: 
              - !Ref PubSubnetId
      TaskDefinition: !Ref 'pgadminTaskDefinition'

Outputs:
  pgadminFargate:
    Description: pgAdmin Fargate Cluster
    Value: !Ref FargateCluster